#!/usr/bin/env ruby
require 'ffi-ncurses'
require File.expand_path('../../lib/rfd', __FILE__)

FFI::NCurses.initscr
FFI::NCurses.raw
FFI::NCurses.noecho
FFI::NCurses.curs_set 0
FFI::NCurses.start_color

begin
  rfd = Rfd::BaseWindow.new ARGV[0] || '.'

  loop do
    c = FFI::NCurses.getch
    case c
    when 10  # enter
      rfd.main.enter
    when 27  # esc
      rfd.q
    when 32  # space
      rfd.space
    when 58  # :
      rfd.colon
    when 127  # BS
      rfd.bs
    when (?a.ord)..(?z.ord), (?A.ord)..(?Z.ord)
      rfd.main.public_send c.chr if rfd.command_mode? && rfd.main.respond_to?(c.chr)
    when FFI::NCurses::KEY_CTRL_A..FFI::NCurses::KEY_CTRL_Z
      chr = ((c - 1 + 65) ^ 0b0100000).chr
      rfd.main.public_send "ctrl_#{chr}" if rfd.command_mode? && rfd.main.respond_to?("ctrl_#{chr}")
    else
      p c
    end
  end
ensure
  FFI::NCurses.endwin
end
